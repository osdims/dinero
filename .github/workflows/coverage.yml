# name: Example workflow for Codecov
# on: [push]
# jobs:
#   run:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     env:
#       OS: ${{ matrix.os }}
#       PYTHON: "3.11"
#     steps:
#       - uses: actions/checkout@master
#       - name: Setup Python
#         uses: actions/setup-python@master
#         with:
#           python-version: 3.11

#       - uses: snok/install-poetry@v1
#         with:
#           version: 1.2.2
#           virtualenvs-create: true
#           virtualenvs-in-project: true

#       - name: cache deps
#         id: cache-deps
#         uses: actions/cache@v3
#         with:
#           path: .venv
#           key: pydeps-${{ hashFiles('**/poetry.lock') }}

#       - run: poetry install --no-interaction --no-root
#         if: steps.cache-deps.outputs.cache-hit != 'true'

#       - run: poetry install --no-interaction
#       - name: Generate coverage report
#         run: poetry run pytest --cov=./ --cov-report=xml

#       - name: Upload coverage to Codecov
#         run: |
#           curl -Os https://uploader.codecov.io/latest/linux/codecov
#           chmod +x codecov
#           ./codecov -t ${CODECOV_TOKEN}

name: Workflow for Codecov example-python
on: [push, pull_request]
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests and collect coverage
        run: pytest --cov app
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3